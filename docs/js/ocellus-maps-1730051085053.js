/* generated: Sun Oct 27 2024 18:44:45 GMT+0100 (Central European Standard Time) */
import{cellArea as e,UNITS as t,cellToBoundary as o}from"https://cdn.jsdelivr.net/npm/h3-js@4.1.0/+esm";const i=e=>document.querySelector(e),n=e=>document.querySelectorAll(e);window.log.level="ERROR";const a={fetchOpts:{},uri:{zenodeo:"https://test.zenodeo.org/v3",maps:"https://maps.zenodeo.org",zenodo:"https://zenodo.org",treatmentBank:"https://tb.plazi.org/GgServer/html"},cache:{images:{yearlyCounts:!1,totals:!1},treatments:{yearlyCounts:!1,totals:!1},journals:null,collectionCodes:null,bins:null},figureSize:{normal:250,small:100,tiny:50},defaultPlaceholder:"search images",results:{totalCount:0,figures:[],page:1,size:30},resources:["treatments","citations","images"],pseudoResources:["about","ip","contact","privacy"],params:{notValidQ:["resource","page","size","grid","refreshCache","cols"],validImages:["httpUri","caption","captionText","q","treatmentId","treatmentTitle","articleTitle","treatmentDOI","articleDOI","zenodoDep","authorityName","collectionCode","status","journalTitle","journalYear","kingdom","phylum","class","family","order","genus","species","publicationDate","checkinTime","latitude","longitude","geolocation","isOnLand","validGeo","eco_name","biome","biome_id"],validTreatments:["treatmentId","treatmentTitle","treatmentDOI","zenodoDep","articleTitle","articleDOI","publicationDate","journalYear","authorityName","status","checkinTime","validGeo","q","latitude","longitude","geolocation","eco_name","biome","isOnLand","journalTitle","kingdom","phylum","class","family","order","genus","species"],validCommon:["refreshCache","page","size","cols","groupby"],notValidSearchCriteria:["resource","communities","communitiesChooser","refreshCache","view","size","page","reset","submit","source","grid"]},cols:{images:["treatmentId","treatmentTitle","zenodoDep","treatmentDOI","articleTitle","articleAuthor","httpUri","caption","latitude","longitude"],treatments:["treatmentId","treatmentTitle","zenodoDep","treatmentDOI","articleTitle","articleAuthor","journalTitle","latitude","longitude"]},maps:{},hiddenClasses:["hidden","noblock"],closedFigcaptionHeight:"30px",H3ColorRamp:["#ffffcc","#ffeda0","#fed976","#feb24c","#fd8d3c","#fc4e2a","#e31a1c","#b10026"],markerIcons:{default:L.icon({iconUrl:"/img/marker.png",iconSize:[24,38],iconAnchor:[12,38],popupAnchor:[0,0],shadowUrl:"/img/marker-shadow.png",shadowSize:[41,41],shadowAnchor:[11,37]}),active:L.icon({iconUrl:"/img/marker-active.png",iconSize:[24,38],iconAnchor:[12,38],popupAnchor:[0,0],shadowUrl:"/img/marker-shadow.png",shadowSize:[41,41],shadowAnchor:[12,38]}),clicked:L.icon({iconUrl:"/img/marker-clicked.png",iconSize:[24,38],iconAnchor:[12,38],popupAnchor:[0,0],shadowUrl:"/img/marker-shadow.png",shadowSize:[41,41],shadowAnchor:[12,38]})},months:["January","February","March","April","May","June","July","August","September","October","November","December"],charts:{termFreq:null,yearlyCounts:null}};async function r(i,n){if("imageMarkerClusters"in n&&i.hasLayer(n.imageMarkerClusters)&&(log.info("removing image marker clusters"),i.removeLayer(n.imageMarkerClusters),n.slidebar.remove()),"h3"in n)i.hasLayer(n.h3)||(log.info("re-adding existing h3 layer"),i.addLayer(n.h3),n.h3info.addTo(i));else{log.info("initializing h3 layer");const r=await async function(i){const n=`${a.uri.zenodeo}/bins/${i}`,r=await fetch(n,a.fetchOpts);if(r.ok){const i={type:"FeatureCollection",features:[]},n=["81033ffffffffff","83f293fffffffff"],a=await r.json();n.forEach((e=>delete a[e]));for(const[n,r]of Object.entries(a)){const a=Math.round(e(n,t.km2)),s={type:"Feature",properties:{numOfTreatments:r,area:a,density:r/a},geometry:{type:"Polygon",coordinates:[o(n).map((e=>[e[1],e[0]]))]}};i.features.push(s)}return s(i),i}alert("HTTP-Error: "+r.status)}(3),l=r.features.map((e=>e.properties.density)),c=1/Math.min(...l),d=function({data:e,scaleFactor:t,colorRamp:o,typeOfBins:i}){const n=o.length,a=[];if("equalWidth"===i){const t=Object.values(e);t.reduce(((e,t)=>e+t));const i=Math.max(...t)+1,r=Math.min(...t),s=(i-r)/n;let l=0;for(let e=r;e<i;e+=s){const t=e+s,i=o[l];a.push({from:Math.round(e),to:Math.round(t),fillColor:i,num:0}),l++}a.forEach((t=>{t.num=Object.values(e).filter((e=>e>=t.from&&e<t.to)).length}))}else if("equalFreq"===i){const i=Object.keys(e).length,r=Math.round(i/n),s=[];for(const[o,i]of Object.entries(e))s.push({id:o,num:Math.round(i*t)});const l=s.sort(((e,t)=>e.num-t.num));for(let e=0;e<n;e++){const t=e*r,i=t+r,n=l.slice(t,i),s=n[0].num,c=n[n.length-1].num;a[e]={from:s,to:c,fillColor:o[e],num:n.length}}}return a}({data:l,scaleFactor:c,colorRamp:a.H3ColorRamp,typeOfBins:"equalFreq"}),m=function(e){let t="#f5f5f5",o=0;const i=e.properties.density*c;return i>0&&(t=function(e,t){for(let o=0,i=t.length;o<i;o++)if(e>=t[o].from&&e<t[o].to)return t[o].fillColor}(i,d),o=.7),{fillColor:t,color:"grey",weight:0,fillOpacity:o}};n.h3=L.geoJSON(r,{style:m,onEachFeature:(e,t)=>{t.on({mouseover:e=>{!function({mapLayers:e,bin:t}){t.setStyle({weight:2,color:"#666",dashArray:"",fillOpacity:.1}),L.Browser.ie||L.Browser.opera||L.Browser.edge||t.bringToFront();e.h3info.update(t.feature.properties)}({mapLayers:n,bin:e.target})},mouseout:e=>{!function({mapLayers:e,bin:t}){e.h3.resetStyle(t),e.h3info.update()}({mapLayers:n,bin:e.target})}})}}),i.addLayer(n.h3),function(e,t){const o=L.control(),i="Hover over a bin to see num of images";o.onAdd=function(e){return this._div=L.DomUtil.create("div","h3info"),this._div.innerHTML=i,this._div},o.update=function(e){this._div.innerHTML=e?`${e.numOfTreatments} treatments in ${e.area} km<sup>2</sup>`:i},t.h3info=o,o.addTo(e)}(i,n)}}function s(e){const{type:t}=e;if("FeatureCollection"===t)return void e.features.map(s);const{type:o,coordinates:i}=e.geometry;switch(o){case"LineString":return void l(i);case"Polygon":return void c(i);case"MultiPolygon":return void i.forEach((e=>c(e)));default:throw new Error(`Unknown geometry type: ${o}`)}}function l(e){let t=!1;for(let o=0;o<e.length;o++)if(Math.abs(e[0][0]-e[(o+1)%e.length][0])>180){t=!0;break}t&&e.forEach((e=>function(e){const t=e[0];e[0]=t<0?t+360:t}(e)))}function c(e){e.forEach((e=>l(e)))}const d=L.Control.extend({options:{content:"<i>Click on a marker for more info</i>",state:"full",threshold:50,doubleThreshold:200},initialize:function(e){return L.Util.setOptions(this,e),this.on("swipeup",(function(e){let t;if(e.value>this.options.doubleThreshold)t="full";else switch(this._size){case"closed":t="quarter";break;case"quarter":t="half";break;case"half":t="full"}this.toggleSize(t),L.DomEvent.stopPropagation(e)})),this.on("swipedown",(function(e){let t;if(e.value>this.options.doubleThreshold)t="closed";else switch(this._size){case"full":t="half";break;case"half":t="quarter";break;case"quarter":t="closed"}this.toggleSize(t),L.DomEvent.stopPropagation(e)})),this},toggleSize:function(e){const t=document.querySelector("#leaflet-slidebar");if(t.classList.contains(e));else{["closed","quarter","half","full"].forEach((e=>t.classList.remove(e))),t.classList.add(e),this._size=e}this.reCenter(this._newCenter)},onAdd:function(e){if(!this._div){this._div=L.DomUtil.create("div","leaflet-slidebar"),this._div.classList.add(this.options.state),this._div.id="leaflet-slidebar",this._size=this.options.state;const e="",t=L.DomUtil.create("nav",e,this._div),o="";L.DomUtil.create("hr",o,t);const i="",n=L.DomUtil.create("button",i,t),a=e=>this.toggleSize("closed");L.DomEvent.on(n,"click",a,this),L.DomEvent.on(n,"touchend",a,this);const r="";L.DomUtil.create("main",r,this._div)}return this._div},onRemove:function(e){return this},reCenter:function(){const e=this._map.latLngToLayerPoint(this._newCenter),t=[],{min:o,max:i}=this._map.getPixelBounds();if(document.body.clientWidth<400){const n=i.y-o.y;let a=0;"full"===this._size?a=.375:"half"===this._size?a=.25:"quarter"===this._size&&(a=.125),t.push(e.x,e.y+a*n)}else t.push(e.x,e.y);const n=this._map.layerPointToLatLng(t);this._map.flyTo(n)},update:async function({content:e,latlng:t}){return this._div.querySelector("#leaflet-slidebar main").innerHTML=e,this._newCenter=t,this.toggleSize("full"),this},addTo:function(e){return this.onRemove(),this._map=e,this._container=this.onAdd(e),L.DomUtil.addClass(this._container,"leaflet-slidebar"),L.Browser.touch&&L.DomUtil.addClass(this._container,"leaflet-touch"),L.DomEvent.disableScrollPropagation(this._container),L.DomEvent.disableClickPropagation(this._container),L.DomEvent.on(this._container,"touchstart",this._startSwipe,this),L.DomEvent.on(this._container,"touchend",this._endSwipe,this),L.DomEvent.on(this._container,"touchstart",L.DomEvent.stopPropagation),L.DomEvent.on(this._container,"touchend",L.DomEvent.stopPropagation),e._container.insertBefore(this._container,e._container.firstChild),this},_startSwipe:function(e){const t=e.touches&&e.touches[0];t&&this._map&&(e.target&&"A"==e.target.tagName||(this._startPoint=this._map.mouseEventToContainerPoint(t)))},_endSwipe:function(e){const t=e.changedTouches&&e.changedTouches[0];if(!t||!this._startPoint||!this._map)return;const o=this._map.mouseEventToContainerPoint(t).subtract(this._startPoint),i=Math.abs(o.x),n=Math.abs(o.y);if(this._startPoint=null,i<this.options.threshold&&n<this.options.threshold)return;if(i/n>.5&&i/n<2)return;let a,r;i>n?(r=i,a=o.x<0?"left":"right"):(r=n,a=o.y<0?"up":"down"),this.fire("swipe"+a,{direction:a,value:r})}});L.extend(d.prototype,L.Evented.prototype);async function m(e,t){const o=i("#throbber");o.classList.remove("nothrob");const n=e.getBounds(),r=await async function(e){const t=e.getSouthWest().lat,o=e.getSouthWest().lng,i=e.getNorthEast().lat,n=e.getNorthEast().lng,r=`${a.uri.zenodeo}/images?geolocation=within(min_lat:${t},min_lng:${o},max_lat:${i},max_lng:${n})&cols=treatmentId&cols=latitude&cols=longitude&size=5000`,s=await fetch(r,a.fetchOpts);if(s.ok)return(await s.json()).item.result.records;alert("HTTP-Error: "+s.status)}(n);if(r){t.imageMarkerClusters||(t.imageMarkerClusters=L.markerClusterGroup({disableClusteringAtZoom:10}));const i=[];r.forEach((n=>{const r=n.images_id;if(!t.imageMarkers.has(r)){const s=n.treatmentId,l={title:s,icon:a.markerIcons.default},c=new L.LatLng(n.latitude,n.longitude),d=L.marker(c,l);d.on("click",(async function(l){o.classList.remove("nothrob");const d=l.target;d.setIcon(a.markerIcons.active);const m=await async function(e){if(!e)return"Click on an image marker for more info";{e.treatmentId;const t=`${a.uri.zenodeo}/images?id=${e.images_id}&cols=treatmentId&cols=treatmentTitle&cols=zenodoDep&cols=httpUri&cols=caption`,o=await fetch(t,a.fetchOpts);if(o.ok){const e=(await o.json()).item.result.records[0],t={zenodoDep:e.zenodoDep,treatmentId:e.treatmentId,treatmentTitle:e.treatmentTitle,captionText:e.captionText,loc:void 0,convexHull:void 0},i=e.httpUri.split("/")[4];e.httpUri.indexOf("zenodo")>-1?e.httpUri.indexOf(".svg")>-1?(t.uri="/img/kein-preview.png",t.fullImage="/img/kein-preview.png"):(t.uri=`https://zenodo.org/api/iiif/record:${i}:figure.png/full/250,/0/default.jpg`,t.fullImage=`https://zenodo.org/api/iiif/record:${i}:figure.png/full/^1200,/0/default.jpg`,t.fullImg=`${a.zenodoUri}/${i}/thumb1200`):(t.uri=`${e.httpUri}/singlefigAOF/`,t.fullImage=e.httpUri);return(({figureSize:e,rec:t,target:o})=>{const i=t.zenodoDep?`<img src="img/zenodo-gradient-35.png" width="35" height="14"> <a href="${a.uri.zenodo}/records/${t.zenodoDep}" target="_blank">more on Zenodo</a>`:"",n=`<img src="img/treatmentBankLogo.png" width="35" height="14"> <a href="${a.uri.treatmentBank}/${t.treatmentId}" target="_blank">more on TreatmentBank</a>`,r=250===e?"visible":"noblock",s=`figure-${e}`+(t.treatmentId?" tb":""),l=`this.onerror=null; setTimeout(() => { this.src='${t.uri}' }, 1000);`,c=t.loc||t.convexHull?"this.parentNode.parentNode.parentNode.parentNode.style.height=this.height+150+'px'":"";let d;return d="slidebar"===o?`\n        <h3>${t.treatmentTitle}</h3>\n        <p>${t.captionText}</p>\n        ${n}<br>\n        ${i}\n        `:`\n        <details>\n            <summary class="figTitle" data-title="${t.treatmentTitle}">\n                ${t.treatmentTitle}\n            </summary>\n            <p>${t.captionText}</p>\n            ${n}<br>\n            ${i}\n        </details>\n        `,`<figure class="${s}">\n    <a class="zen" href="${t.fullImage}"><img src="img/bug.gif" \n        width="${t.figureSize}" \n        data-src="${t.uri}" \n        class="lazyload" \n        data-recid="${t.treatmentId}" \n        onerror="${l}"\n        onload="${c}"></a>\n    <figcaption class="${r}">\n        ${d}\n    </figcaption>\n</figure>`})({figureSize:250,rec:t,target:"slidebar"})}}}(n);t.slidebar.update({content:m,latlng:c}),o.classList.add("nothrob");document.querySelector("#leaflet-slidebar").style.visibility="visible",function(e,t,o){const i=e.getCenter(),n=Math.round(1e5*i.lat)/1e5,a=Math.round(1e5*i.lng)/1e5,r=e.getZoom();let s=`#show=maps&lat=${n}&lng=${a}&zoom=${r}&treatmentId=${t}-${o}`;const l={zoom:r,center:{lat:n,lng:a}};window.history.pushState(l,"map",s)}(e,s,r),t.imageMarkerClusters.getVisibleParent(d);const u=i[i.length-1];u&&u.setIcon(a.markerIcons.clicked),i.push(d)})),t.imageMarkers.set(r,d),t.imageMarkerClusters.addLayer(d)}})),e.hasLayer(t.imageMarkerClusters)?log.info("used existing image marker clusters layer"):(log.info("re-adding existing image marker clusters"),e.addLayer(t.imageMarkerClusters))}o.classList.add("nothrob")}async function u(e,t,o){if("h3"in t&&e.hasLayer(t.h3)&&(log.info("removing h3 layer"),e.removeLayer(t.h3),t.h3info.remove()),"imageMarkerClusters"in t?(await m(e,t),t.slidebar.addTo(e)):(log.info("initializing image marker clusters"),function(e,t){t.slidebar=new d({state:"closed"}),t.slidebar.addTo(e)}(e,t),t.imageMarkers=new Map,await m(e,t)),o){const[e,i]=o.split("-"),n=t.imageMarkers.get(Number(i));n&&(t.imageMarkerClusters.zoomToShowLayer(n),n.fireEvent("click"))}}async function h({baseLayerSource:e,map:t}){const o={minZoom:1,maxZoom:17,zoomOffset:-1,tileSize:512};let i;if("arcgis"===e)o.attribution="&copy; ESRI",i=L.tileLayer("https://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}",o).addTo(t);else if("geodeo"===e){const e=`${a.uri.maps}/nev_raster/{z}/{x}/{y}`,o={ne_50m_admin_1_states_provinces_lakes:{maxZoom:2,tms:!0,styles:{weight:1,color:"blue",fillColor:"",fillOpacity:.5,fill:!0}},ne_50m_admin_0_countries:{maxZoom:2,tms:!0,styles:{weight:1,color:"#444",fillColor:"f5f5f5",fillOpacity:.25,fill:!0}},ne_10m_admin_1_sel:{maxZoom:5,tms:!0,styles:{weight:1,color:"#444",fillColor:"#f5f5f5",fillOpacity:.25,fill:!0}},nev:{maxNativeZoom:7,maxZoom:10,tms:!0,vectorTileLayerStyles:{playa:{stroke:!0,weight:1,color:"aliceblue",fillColor:"aliceblue",fillOpacity:.25,fill:!0},urban:{stroke:!0,weight:1,color:"bisque",fillColor:"bisque",fillOpacity:.25,fill:!0},water:{stroke:!0,weight:1,color:"black",fillColor:"lightblue",fillOpacity:.25,fill:!0},ice:function(e){return"glacier"===e.type?{weight:1,color:"white",fillColor:"white",fillOpacity:.45,fill:!0}:"ice_shelf"===e.type?{weight:1,color:"white",fillColor:"lightgrey",fillOpacity:.45,fill:!0}:void 0},river:{weight:1,color:"blue",fillColor:"",fillOpacity:1,fill:!1},railroad:{stroke:!0,weight:1,color:"brown"},road:{weight:1,color:"#ffcc00",fillColor:"",fillOpacity:1,fill:!1},country_label:{stroke:!1,fill:!1},state_label:{stroke:!1,fill:!1},marine_label:{stroke:!1,fill:!1},lake_label:{stroke:!1,fill:!1},place_label:{stroke:!1,fill:!1},airport_label:{stroke:!1,fill:!1},port_label:{stroke:!1,fill:!1},admin:function(e,t){const o=e.admin_level;return 0===o?{weight:1,color:"#444",fill:!1}:1===o?{weight:.5,color:"#444",fill:!1}:2===o?{weight:1,color:"#cf52d3",dashArray:"2, 6",fillColor:"green",fillOpacity:.25,fill:!0}:void 0}}},nev_raster:{maxZoom:15,tms:!0}};L.tileLayer(e,{maxNativeZoom:6,maxZoom:10,tms:!0}).addTo(t);const i="nev",n=o[i];L.vectorGrid.protobuf(`${a.uri.maps}/${i}/{z}/{x}/{y}`,n).addTo(t)}else if("gbif"===e){o.attribution='&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> / &copy; <a href="https://www.openmaptiles.org/copyright">OpenMapTiles</a>';const e=parseInt(window.devicePixelRatio)||1;i=L.tileLayer("https://tile.gbif.org/3857/omt/{z}/{x}/{y}@{r}x.png?style=gbif-natural".replace("{r}",e),o).addTo(t)}return i}async function f({mapContainer:e,baseLayerSource:t}){let o,n={lat:72,lng:124},a={lat:-60,lng:-124},s=5,l=0,c=0;if("map"===e){const e=function({zoom:e,lat:t,lng:o,treatmentId:i}){const n=new URLSearchParams(window.location.hash.substring(1));return{zoom:e=parseInt(n.get("zoom"),10)||e,lat:t=parseFloat(n.get("lat"))||t,lng:o=parseFloat(n.get("lng"))||o,treatmentId:i=n.get("treatmentId")||i}}({zoom:s,lat:l,lng:c});s=e.zoom,l=e.lat,c=e.lng,o=e.treatmentId,n={lat:61.6,lng:131.48},a={lat:-31.95,lng:-137.11}}const d=L.latLngBounds(n,a),m=L.map(e,{preferCanvas:!0}).setView({lat:l,lng:c},s);if(m.attributionControl.setPrefix(""),L.easyButton(".",(()=>m.fitBounds(d))).addTo(m),"map"===e){!function(e){let t=!0;e.on("moveend",(function(){if(!t)return void(t=!0);const o=e.getCenter(),i=Math.round(1e5*o.lat)/1e5,n=Math.round(1e5*o.lng)/1e5,a=e.getZoom(),r=window.location.pathname.split(".").shift().substring(1);let s;"maps"===r?s=`#lat=${i}&lng=${n}&zoom=${a}`:"index"===r&&(s=`#show=maps&lat=${i}&lng=${n}&zoom=${a}`);const l=new URLSearchParams(window.location.hash.substring(1)).get("treatmentId")||void 0;l&&(s+=`&treatmentId=${l}`);const c={zoom:a,center:{lat:i,lng:n}};window.history.pushState(c,"map",s)})),window.addEventListener("popstate",(function(o){null!==o.state&&(e.setView(o.state.center,o.state.zoom),t=!1)}))}(m),m.on("moveend",(async function(t){await g(m,e)}));const e={baseLayer:h({baseLayerSource:t,map:m})};await g(m,e,o)}else if("mapSearch"===e){m.on("moveend",(async function(t){r(m,e)}));const e={baseLayer:h({baseLayerSource:t,map:m})};!function(e,t){t.drawControls=new L.FeatureGroup,function(e,t){e.hasLayer(t)||e.addLayer(t)}(e,t.drawControls);const o={position:"topleft",draw:{polyline:!1,polygon:!1,circle:{shapeOptions:{weight:1}},rectangle:{shapeOptions:{clickable:!1,weight:1}},circlemarker:!1,marker:!1},edit:{featureGroup:t.drawControls}},n=new L.Control.Draw(o);e.addControl(n),e.on(L.Draw.Event.CREATED,(function(e){const o=e.layerType,n=e.layer,a=i("#coords"),r=i("input[name=as-geolocation");if("rectangle"===o){const e=n.toGeoJSON().geometry.coordinates,[t,o,i,s,l]=e[0],c=t[1].toFixed(2),d=t[0].toFixed(2),m=i[1].toFixed(2),u=i[0].toFixed(2);a.innerHTML=`lower left: lat ${c}, lng: ${d}; upper right: lat ${m}, lng ${u}`,r.value=`within(min_lat:${c},min_lng:${d},max_lat:${m},max_lng:${u})`}else if("circle"===o){const t=e.layer.getLatLng(),o=t.lng.toFixed(2),i=t.lat.toFixed(2),n=(e.layer.getRadius()/1e3).toFixed(2);a.innerHTML=`within ${n} kms of ${o}, ${i}`,r.value=`within(radius:${n},units:'kilometers',lat:${i},lng:${o})`}t.drawControls.addLayer(n)})),e.on(L.Draw.Event.DELETED,(function(e){i("input[name=as-geolocation").value="",i("#coords").innerHTML=""}))}(m,e),r(m,e)}}async function g(e,t,o){e.getZoom()<=5?r(e,t):await u(e,t,o)}const p=e=>{const t=new URL(e.target.href).hash,o=n(".modal");t.length>0?(o.forEach((e=>{e.classList.add(...a.hiddenClasses)})),i(t).classList.remove(...a.hiddenClasses)):o.forEach((e=>e.classList.add(...a.hiddenClasses)))};function y(){n(".modalToggle").forEach((e=>e.addEventListener("click",p))),f({mapContainer:"map",baseLayerSource:"gbif",drawControl:!1})}export{y as init};
