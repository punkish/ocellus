{"version":3,"sources":["jsdelivr-header.js","/npm/leaflet-easybutton@2.4.0/src/easy-button.js"],"names":[],"mappings":"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","file":"/npm/leaflet-easybutton@2.4.0/src/easy-button.js/+esm","sourceRoot":"","sourcesContent":["/**\n * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.\n * Original file: /npm/leaflet-easybutton@2.4.0/src/easy-button.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n","(function(){\n\n// This is for grouping buttons into a bar\n// takes an array of `L.easyButton`s and\n// then the usual `.addTo(map)`\nL.Control.EasyBar = L.Control.extend({\n\n  options: {\n    position:       'topleft',  // part of leaflet's defaults\n    id:             null,       // an id to tag the Bar with\n    leafletClasses: true        // use leaflet classes?\n  },\n\n\n  initialize: function(buttons, options){\n\n    if(options){\n      L.Util.setOptions( this, options );\n    }\n\n    this._buildContainer();\n    this._buttons = [];\n\n    for(var i = 0; i < buttons.length; i++){\n      buttons[i]._bar = this;\n      buttons[i]._container = buttons[i].button;\n      this._buttons.push(buttons[i]);\n      this.container.appendChild(buttons[i].button);\n    }\n\n  },\n\n\n  _buildContainer: function(){\n    this._container = this.container = L.DomUtil.create('div', '');\n    this.options.leafletClasses && L.DomUtil.addClass(this.container, 'leaflet-bar easy-button-container leaflet-control');\n    this.options.id && (this.container.id = this.options.id);\n  },\n\n\n  enable: function(){\n    L.DomUtil.addClass(this.container, 'enabled');\n    L.DomUtil.removeClass(this.container, 'disabled');\n    this.container.setAttribute('aria-hidden', 'false');\n    return this;\n  },\n\n\n  disable: function(){\n    L.DomUtil.addClass(this.container, 'disabled');\n    L.DomUtil.removeClass(this.container, 'enabled');\n    this.container.setAttribute('aria-hidden', 'true');\n    return this;\n  },\n\n\n  onAdd: function () {\n    return this.container;\n  },\n\n  addTo: function (map) {\n    this._map = map;\n\n    for(var i = 0; i < this._buttons.length; i++){\n      this._buttons[i]._map = map;\n    }\n\n    var container = this._container = this.onAdd(map),\n        pos = this.getPosition(),\n        corner = map._controlCorners[pos];\n\n    L.DomUtil.addClass(container, 'leaflet-control');\n\n    if (pos.indexOf('bottom') !== -1) {\n      corner.insertBefore(container, corner.firstChild);\n    } else {\n      corner.appendChild(container);\n    }\n\n    return this;\n  }\n\n});\n\nL.easyBar = function(){\n  var args = [L.Control.EasyBar];\n  for(var i = 0; i < arguments.length; i++){\n    args.push( arguments[i] );\n  }\n  return new (Function.prototype.bind.apply(L.Control.EasyBar, args));\n};\n\n// L.EasyButton is the actual buttons\n// can be called without being grouped into a bar\nL.Control.EasyButton = L.Control.extend({\n\n  options: {\n    position:  'topleft',       // part of leaflet's defaults\n\n    id:        null,            // an id to tag the button with\n\n    type:      'replace',       // [(replace|animate)]\n                                // replace swaps out elements\n                                // animate changes classes with all elements inserted\n\n    states:    [],              // state names look like this\n                                // {\n                                //   stateName: 'untracked',\n                                //   onClick: function(){ handle_nav_manually(); };\n                                //   title: 'click to make inactive',\n                                //   icon: 'fa-circle',    // wrapped with <a>\n                                // }\n\n    leafletClasses:   true,     // use leaflet styles for the button\n    tagName:          'button',\n  },\n\n\n\n  initialize: function(icon, onClick, title, id){\n\n    // clear the states manually\n    this.options.states = [];\n\n    // add id to options\n    if(id != null){\n      this.options.id = id;\n    }\n\n    // storage between state functions\n    this.storage = {};\n\n    // is the last item an object?\n    if( typeof arguments[arguments.length-1] === 'object' ){\n\n      // if so, it should be the options\n      L.Util.setOptions( this, arguments[arguments.length-1] );\n    }\n\n    // if there aren't any states in options\n    // use the early params\n    if( this.options.states.length === 0 &&\n        typeof icon  === 'string' &&\n        typeof onClick === 'function'){\n\n      // turn the options object into a state\n      this.options.states.push({\n        icon: icon,\n        onClick: onClick,\n        title: typeof title === 'string' ? title : ''\n      });\n    }\n\n    // curate and move user's states into\n    // the _states for internal use\n    this._states = [];\n\n    for(var i = 0; i < this.options.states.length; i++){\n      this._states.push( new State(this.options.states[i], this) );\n    }\n\n    this._buildButton();\n\n    this._activateState(this._states[0]);\n\n  },\n\n  _buildButton: function(){\n\n    this.button = L.DomUtil.create(this.options.tagName, '');\n\n    if (this.options.tagName === 'button') {\n        this.button.setAttribute('type', 'button');\n    }\n\n    if (this.options.id ){\n      this.button.id = this.options.id;\n    }\n\n    if (this.options.leafletClasses){\n      L.DomUtil.addClass(this.button, 'easy-button-button leaflet-bar-part leaflet-interactive');\n    }\n\n    // don't let double clicks and mousedown get to the map\n    L.DomEvent.addListener(this.button, 'dblclick', L.DomEvent.stop);\n    L.DomEvent.addListener(this.button, 'mousedown', L.DomEvent.stop);\n    L.DomEvent.addListener(this.button, 'mouseup', L.DomEvent.stop);\n\n    // take care of normal clicks\n    L.DomEvent.addListener(this.button,'click', function(e){\n      L.DomEvent.stop(e);\n      this._currentState.onClick(this, this._map ? this._map : null );\n      this._map && this._map.getContainer().focus();\n    }, this);\n\n    // prep the contents of the control\n    if(this.options.type == 'replace'){\n      this.button.appendChild(this._currentState.icon);\n    } else {\n      for(var i=0;i<this._states.length;i++){\n        this.button.appendChild(this._states[i].icon);\n      }\n    }\n  },\n\n\n  _currentState: {\n    // placeholder content\n    stateName: 'unnamed',\n    icon: (function(){ return document.createElement('span'); })()\n  },\n\n\n\n  _states: null, // populated on init\n\n\n\n  state: function(newState){\n\n    // when called with no args, it's a getter\n    if (arguments.length === 0) {\n      return this._currentState.stateName;\n    }\n\n    // activate by name\n    if(typeof newState == 'string'){\n\n      this._activateStateNamed(newState);\n\n    // activate by index\n    } else if (typeof newState == 'number'){\n\n      this._activateState(this._states[newState]);\n    }\n\n    return this;\n  },\n\n\n  _activateStateNamed: function(stateName){\n    for(var i = 0; i < this._states.length; i++){\n      if( this._states[i].stateName == stateName ){\n        this._activateState( this._states[i] );\n      }\n    }\n  },\n\n  _activateState: function(newState){\n\n    if( newState === this._currentState ){\n\n      // don't touch the dom if it'll just be the same after\n      return;\n\n    } else {\n\n      // swap out elements... if you're into that kind of thing\n      if( this.options.type == 'replace' ){\n        this.button.appendChild(newState.icon);\n        this.button.removeChild(this._currentState.icon);\n      }\n\n      if( newState.title ){\n        this.button.title = newState.title;\n      } else {\n        this.button.removeAttribute('title');\n      }\n\n      // update classes for animations\n      for(var i=0;i<this._states.length;i++){\n        L.DomUtil.removeClass(this._states[i].icon, this._currentState.stateName + '-active');\n        L.DomUtil.addClass(this._states[i].icon, newState.stateName + '-active');\n      }\n\n      // update classes for animations\n      L.DomUtil.removeClass(this.button, this._currentState.stateName + '-active');\n      L.DomUtil.addClass(this.button, newState.stateName + '-active');\n\n      // update the record\n      this._currentState = newState;\n\n    }\n  },\n\n  enable: function(){\n    L.DomUtil.addClass(this.button, 'enabled');\n    L.DomUtil.removeClass(this.button, 'disabled');\n    this.button.setAttribute('aria-hidden', 'false');\n    return this;\n  },\n\n  disable: function(){\n    L.DomUtil.addClass(this.button, 'disabled');\n    L.DomUtil.removeClass(this.button, 'enabled');\n    this.button.setAttribute('aria-hidden', 'true');\n    return this;\n  },\n\n  onAdd: function(map){\n    var bar = L.easyBar([this], {\n      position: this.options.position,\n      leafletClasses: this.options.leafletClasses\n    });\n    this._anonymousBar = bar;\n    this._container = bar.container;\n    return this._anonymousBar.container;\n  },\n\n  removeFrom: function (map) {\n    if (this._map === map)\n      this.remove();\n    return this;\n  },\n\n});\n\nL.easyButton = function(/* args will pass automatically */){\n  var args = Array.prototype.concat.apply([L.Control.EasyButton],arguments);\n  return new (Function.prototype.bind.apply(L.Control.EasyButton, args));\n};\n\n/*************************\n *\n * util functions\n *\n *************************/\n\n// constructor for states so only curated\n// states end up getting called\nfunction State(template, easyButton){\n\n  this.title = template.title;\n  this.stateName = template.stateName ? template.stateName : 'unnamed-state';\n\n  // build the wrapper\n  this.icon = L.DomUtil.create('span', '');\n\n  L.DomUtil.addClass(this.icon, 'button-state state-' + this.stateName.replace(/(^\\s*|\\s*$)/g,''));\n  this.icon.innerHTML = buildIcon(template.icon);\n  this.onClick = L.Util.bind(template.onClick?template.onClick:function(){}, easyButton);\n}\n\nfunction buildIcon(ambiguousIconString) {\n\n  var tmpIcon;\n\n  // does this look like html? (i.e. not a class)\n  if( ambiguousIconString.match(/[&;=<>\"']/) ){\n\n    // if so, the user should have put in html\n    // so move forward as such\n    tmpIcon = ambiguousIconString;\n\n  // then it wasn't html, so\n  // it's a class list, figure out what kind\n  } else {\n      ambiguousIconString = ambiguousIconString.replace(/(^\\s*|\\s*$)/g,'');\n      tmpIcon = L.DomUtil.create('span', '');\n\n      if( ambiguousIconString.indexOf('fa-') === 0 ){\n        L.DomUtil.addClass(tmpIcon, 'fa '  + ambiguousIconString)\n      } else if ( ambiguousIconString.indexOf('glyphicon-') === 0 ) {\n        L.DomUtil.addClass(tmpIcon, 'glyphicon ' + ambiguousIconString)\n      } else {\n        L.DomUtil.addClass(tmpIcon, /*rollwithit*/ ambiguousIconString)\n      }\n\n      // make this a string so that it's easy to set innerHTML below\n      tmpIcon = tmpIcon.outerHTML;\n  }\n\n  return tmpIcon;\n}\n\n})();\n"]}